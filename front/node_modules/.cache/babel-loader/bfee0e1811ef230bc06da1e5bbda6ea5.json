{"ast":null,"code":"import _classCallCheck from \"/Users/macbookpro/Desktop/apimarvel/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macbookpro/Desktop/apimarvel/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macbookpro/Desktop/apimarvel/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbookpro/Desktop/apimarvel/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macbookpro/Desktop/apimarvel/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macbookpro/Desktop/apimarvel/front/src/App.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport CryptoJS from \"crypto-js\";\nimport Comic from './Components/comic';\nimport { Container, Row, Button, Navbar } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //Redux//////////////////////////////////////////\n// import {connect} from 'react-redux';\n// import Data from './Components/Reduceur/nbPage.reduceur'\n// import {Provider} from 'react-redux';\n// import {createStore, combineReducers} from 'redux';\n// const store = createStore(combineReducers({Data}));\n\nvar PRIV_KEY = \"ce1693d8baa06f879abcab4c75c19e34006074db\";\nvar PUBLIC_KEY = \"1415ee478404a80e6f620f034e526ca0\";\nvar ts = new Date().getTime();\nvar hash = CryptoJS.MD5(ts + PRIV_KEY + PUBLIC_KEY).toString();\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: [],\n      total: 0\n    };\n\n    _this.handleClick = function (e) {\n      console.log('oooo');\n\n      _this.setState({\n        offset: e.target.value\n      });\n\n      fetch(\"http://gateway.marvel.com/v1/public/characters?ts=\".concat(ts, \"&offset=\").concat(e.target.value, \"&limit=8&apikey=\").concat(PUBLIC_KEY, \"&hash=\").concat(hash)).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this.setState({\n          data: data.data.results\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"http://gateway.marvel.com/v1/public/characters?ts=\".concat(ts, \"&offset=\").concat(this.state.offset, \"&limit=8&apikey=\").concat(PUBLIC_KEY, \"&hash=\").concat(hash)).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.setState({\n          data: data.data.results,\n          total: data.data.total / 10\n        });\n      }); //Je divise par / 10 pour limiter le nombre de page dynamique //\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // this.props.onNbPageClick(this.state.data , this.state.limit, this.state.offset)\n      console.log(this.state.total);\n      var dataList = this.state.data.map(function (data, i) {\n        return React.createElement(Comic, {\n          key: i,\n          comicsTitle: data.name,\n          comicsUrl: data.urls[1].url,\n          comicsDesc: data.description,\n          comicsImg: \"\".concat(data.thumbnail.path, \"/portrait_xlarge.jpg\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        });\n      });\n      var buttonList = [];\n      var maxPage = this.state.total / this.limit;\n\n      for (var i = 0; i < maxPage; i++) {\n        buttonList.push(React.createElement(Button, {\n          value: i,\n          onClick: this.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, i + 1));\n      }\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"marvel\",\n        src: \"./marvel_1.jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, dataList), buttonList);\n    }\n  }]);\n\n  return App;\n}(Component); // function mapDispatchToProps(dispatch) {\n//   return {\n//    onNbPageClick: function(data , limit , offset) { \n//      dispatch( {type: 'data',\n//                 data : data ,\n//                 limit : limit,\n//                 offset: offset\n//     } ) \n//    }\n//   }\n//  }\n//  export default connect(\n//    null, \n//    mapDispatchToProps\n//  )(App);\n\n\nexport default App;","map":{"version":3,"sources":["/Users/macbookpro/Desktop/apimarvel/front/src/App.js"],"names":["React","Component","CryptoJS","Comic","Container","Row","Button","Navbar","PRIV_KEY","PUBLIC_KEY","ts","Date","getTime","hash","MD5","toString","App","state","data","total","handleClick","e","console","log","setState","offset","target","value","fetch","then","response","json","results","dataList","map","i","name","urls","url","description","thumbnail","path","buttonList","maxPage","limit","push"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sCAAP;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,SAAQC,SAAR,EAAkBC,GAAlB,EAAsBC,MAAtB,EAA8BC,MAA9B,QACO,YADP;AAGA,OAAO,sCAAP,C,CACA;AACA;AACA;AACA;AACA;AACA;;AAIA,IAAMC,QAAQ,GAAG,0CAAjB;AACA,IAAMC,UAAU,GAAG,kCAAnB;AACA,IAAMC,EAAE,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAX;AACA,IAAMC,IAAI,GAAGX,QAAQ,CAACY,GAAT,CAAaJ,EAAE,GAAGF,QAAL,GAAgBC,UAA7B,EAAyCM,QAAzC,EAAb;;IAGMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,KAAK,EAAG;AAFF,K;;UAaRC,W,GAAY,UAACC,CAAD,EAAK;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,YAAKC,QAAL,CAAc;AACdC,QAAAA,MAAM,EAAGJ,CAAC,CAACK,MAAF,CAASC;AADJ,OAAd;;AAGAC,MAAAA,KAAK,6DAAsDlB,EAAtD,qBAAmEW,CAAC,CAACK,MAAF,CAASC,KAA5E,6BAAoGlB,UAApG,mBAAuHI,IAAvH,EAAL,CACCgB,IADD,CACM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADd,EAECF,IAFD,CAEM,UAAAX,IAAI;AAAA,eAAI,MAAKM,QAAL,CAAc;AAACN,UAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUc;AAAjB,SAAd,CAAJ;AAAA,OAFV;AAGC,K;;;;;;;wCAfiB;AAAA;;AAClBJ,MAAAA,KAAK,6DAAsDlB,EAAtD,qBAAmE,KAAKO,KAAL,CAAWQ,MAA9E,6BAAuGhB,UAAvG,mBAA0HI,IAA1H,EAAL,CACCgB,IADD,CACM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADd,EAECF,IAFD,CAEM,UAAAX,IAAI;AAAA,eAAI,MAAI,CAACM,QAAL,CAAc;AAACN,UAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUc,OAAjB;AAA2Bb,UAAAA,KAAK,EAAGD,IAAI,CAACA,IAAL,CAAUC,KAAV,GAAkB;AAArD,SAAd,CAAJ;AAAA,OAFV,EADkB,CAIlB;AACD;;;6BAYQ;AACP;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWE,KAAvB;AACA,UAAMc,QAAQ,GAAG,KAAKhB,KAAL,CAAWC,IAAX,CAAgBgB,GAAhB,CAAoB,UAAChB,IAAD,EAAMiB,CAAN,EAAU;AAC9C,eAAQ,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAEA,CAAZ;AACP,UAAA,WAAW,EAAEjB,IAAI,CAACkB,IADX;AAEP,UAAA,SAAS,EAAElB,IAAI,CAACmB,IAAL,CAAU,CAAV,EAAaC,GAFjB;AAGP,UAAA,UAAU,EAAEpB,IAAI,CAACqB,WAHV;AAIP,UAAA,SAAS,YAAKrB,IAAI,CAACsB,SAAL,CAAeC,IAApB,yBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAKA,OANgB,CAAjB;AAQA,UAAIC,UAAU,GAAG,EAAjB;AACA,UAAIC,OAAO,GAAG,KAAK1B,KAAL,CAAWE,KAAX,GAAkB,KAAKyB,KAArC;;AACA,WAAI,IAAIT,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACQ,OAAf,EAAwBR,CAAC,EAAzB,EAA6B;AAC3BO,QAAAA,UAAU,CAACG,IAAX,CAAgB,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAEV,CAAf;AAAkB,UAAA,OAAO,EAAE,KAAKf,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8Ce,CAAC,GAAC,CAAhD,CAAhB;AACD;;AAED,aACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,QAAf;AAAuB,QAAA,GAAG,EAAC,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,QADH,CAFA,EAKCS,UALD,CADF;AASD;;;;EAlDezC,S,GAqDlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,eAAee,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport CryptoJS from \"crypto-js\";\nimport Comic from './Components/comic';\n\nimport {Container,Row,Button, Navbar,\n }from 'reactstrap'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//Redux//////////////////////////////////////////\n// import {connect} from 'react-redux';\n// import Data from './Components/Reduceur/nbPage.reduceur'\n// import {Provider} from 'react-redux';\n// import {createStore, combineReducers} from 'redux';\n// const store = createStore(combineReducers({Data}));\n\n\n\nconst PRIV_KEY = \"ce1693d8baa06f879abcab4c75c19e34006074db\";\nconst PUBLIC_KEY = \"1415ee478404a80e6f620f034e526ca0\";\nconst ts = new Date().getTime();\nconst hash = CryptoJS.MD5(ts + PRIV_KEY + PUBLIC_KEY).toString();\n\n\nclass App extends Component {\n  state = {\n    data: [],\n    total : 0\n  }\n  \n\n  componentDidMount() {\n    fetch(`http://gateway.marvel.com/v1/public/characters?ts=${ts}&offset=${this.state.offset}&limit=8&apikey=${PUBLIC_KEY}&hash=${hash}`)\n    .then(response => response.json())\n    .then(data => this.setState({data: data.data.results , total : data.data.total / 10}));\n    //Je divise par / 10 pour limiter le nombre de page dynamique //\n  }\n  \n  handleClick=(e)=>{\n    console.log('oooo');\n    this.setState({\n    offset : e.target.value\n    })\n    fetch(`http://gateway.marvel.com/v1/public/characters?ts=${ts}&offset=${e.target.value}&limit=8&apikey=${PUBLIC_KEY}&hash=${hash}`)\n    .then(response => response.json())\n    .then(data => this.setState({data: data.data.results}));\n    }\n\n  render() {\n    // this.props.onNbPageClick(this.state.data , this.state.limit, this.state.offset)\n    console.log(this.state.total)\n    const dataList = this.state.data.map((data,i)=>{\n     return (<Comic key={i} \n      comicsTitle={data.name} \n      comicsUrl={data.urls[1].url} \n      comicsDesc={data.description} \n      comicsImg={`${data.thumbnail.path}/portrait_xlarge.jpg`}/>)\n    })\n\n    var buttonList = [];\n    var maxPage = this.state.total /this.limit;\n    for(var i=0; i<maxPage; i++) {\n      buttonList.push(<Button value={i} onClick={this.handleClick}>{i+1}</Button>);\n    }\n\n    return (\n      <Container>\n      <img className=\"marvel\"src=\"./marvel_1.jpg\" />\n      <Row > \n        {dataList}\n      </Row>\n      {buttonList}\n      </Container>\n    )\n  }\n}\n\n// function mapDispatchToProps(dispatch) {\n//   return {\n//    onNbPageClick: function(data , limit , offset) { \n//      dispatch( {type: 'data',\n//                 data : data ,\n//                 limit : limit,\n//                 offset: offset\n//     } ) \n//    }\n//   }\n//  }\n \n//  export default connect(\n//    null, \n//    mapDispatchToProps\n//  )(App);\n\nexport default App\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}