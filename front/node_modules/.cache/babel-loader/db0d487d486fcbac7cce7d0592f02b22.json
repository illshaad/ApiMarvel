{"ast":null,"code":"import _classCallCheck from \"/Users/macbookpro/Desktop/apimarvel/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macbookpro/Desktop/apimarvel/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macbookpro/Desktop/apimarvel/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbookpro/Desktop/apimarvel/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macbookpro/Desktop/apimarvel/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macbookpro/Desktop/apimarvel/front/src/App.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport CryptoJS from \"crypto-js\";\nimport Paginate from './Components/paginate';\nimport Comic from './Components/comic';\nimport { Container, Row } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var PRIV_KEY = \"ce1693d8baa06f879abcab4c75c19e34006074db\";\n      var PUBLIC_KEY = \"1415ee478404a80e6f620f034e526ca0\";\n      var ts = new Date().getTime();\n      var hash = CryptoJS.MD5(ts + PRIV_KEY + PUBLIC_KEY).toString();\n      fetch(\"http://gateway.marvel.com/v1/public/characters?ts=\".concat(ts, \"&limit=52&apikey=\").concat(PUBLIC_KEY, \"&hash=\").concat(hash)).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.setState({\n          data: data.data.results\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.data);\n      var dataList = this.state.data.map(function (data, i) {\n        return React.createElement(Comic, {\n          key: i,\n          comicsTitle: data.name,\n          comicsUrl: data.urls[0].url,\n          comicsDesc: data.description,\n          comicsImg: \"http://i.annihil.us/u/prod/marvel/i/mg/c/e0\".concat(data.thumbnail.path, \"/portrait_xlarge.jpg\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        });\n      });\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"marvel\",\n        src: \"./Logo-Marvel.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, dataList, React.createElement(Paginate, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar styleHeart = {\n  color: '#fc6861',\n  position: 'absolute',\n  top: '5%',\n  left: '80%',\n  cursor: 'pointer' // function mapDispatchToProps(dispatch) {\n  //   return {\n  //    data: function() { \n  //      dispatch( {type: 'data', \n  //      data \n  //     } ) \n  //    }\n  //   }\n  //  }\n  //  export default connect(\n  //    null, \n  //    mapDispatchToProps\n  //  )(App);\n\n};\nexport default App;","map":{"version":3,"sources":["/Users/macbookpro/Desktop/apimarvel/front/src/App.js"],"names":["React","Component","CryptoJS","Paginate","Comic","Container","Row","App","state","data","PRIV_KEY","PUBLIC_KEY","ts","Date","getTime","hash","MD5","toString","fetch","then","response","json","setState","results","console","log","dataList","map","i","name","urls","url","description","thumbnail","path","styleHeart","color","position","top","left","cursor"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sCAAP;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAAQC,SAAR,EAAkBC,GAAlB,QAA4B,YAA5B;AACA,OAAO,sCAAP;;IAIMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AADA,K;;;;;;wCAIY;AAAA;;AAClB,UAAMC,QAAQ,GAAG,0CAAjB;AACA,UAAMC,UAAU,GAAG,kCAAnB;AACA,UAAMC,EAAE,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAX;AACA,UAAMC,IAAI,GAAGb,QAAQ,CAACc,GAAT,CAAaJ,EAAE,GAAGF,QAAL,GAAgBC,UAA7B,EAAyCM,QAAzC,EAAb;AACAC,MAAAA,KAAK,6DAAsDN,EAAtD,8BAA4ED,UAA5E,mBAA+FI,IAA/F,EAAL,CACCI,IADD,CACM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADd,EAECF,IAFD,CAEM,UAAAV,IAAI;AAAA,eAAI,MAAI,CAACa,QAAL,CAAc;AAACb,UAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUc;AAAjB,SAAd,CAAJ;AAAA,OAFV;AAGD;;;6BACQ;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWC,IAAvB;AACA,UAAMiB,QAAQ,GAAG,KAAKlB,KAAL,CAAWC,IAAX,CAAgBkB,GAAhB,CAAoB,UAAClB,IAAD,EAAMmB,CAAN,EAAU;AAC9C,eAAQ,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAEA,CAAZ;AAAe,UAAA,WAAW,EAAEnB,IAAI,CAACoB,IAAjC;AAAuC,UAAA,SAAS,EAAEpB,IAAI,CAACqB,IAAL,CAAU,CAAV,EAAaC,GAA/D;AAAoE,UAAA,UAAU,EAAEtB,IAAI,CAACuB,WAArF;AAAkG,UAAA,SAAS,uDAAgDvB,IAAI,CAACwB,SAAL,CAAeC,IAA/D,yBAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACA,OAFgB,CAAjB;AAGA,aACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,QAAf;AAAuB,QAAA,GAAG,EAAC,mBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGR,QADH,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAFA,CADA;AAUD;;;;EA7BezB,S;;AAgClB,IAAIkC,UAAU,GAAG;AACfC,EAAAA,KAAK,EAAE,SADQ;AAEfC,EAAAA,QAAQ,EAAE,UAFK;AAGfC,EAAAA,GAAG,EAAE,IAHU;AAIfC,EAAAA,IAAI,EAAE,KAJS;AAKfC,EAAAA,MAAM,EAAE,SALO,CAQjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AArBiB,CAAjB;AAuBA,eAAejC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport CryptoJS from \"crypto-js\";\nimport Paginate from './Components/paginate'\nimport Comic from './Components/comic';\nimport {Container,Row} from 'reactstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n  \nclass App extends Component {\n  state = {\n    data: []\n  }\n\n  componentDidMount() {\n    const PRIV_KEY = \"ce1693d8baa06f879abcab4c75c19e34006074db\";\n    const PUBLIC_KEY = \"1415ee478404a80e6f620f034e526ca0\";\n    const ts = new Date().getTime();\n    const hash = CryptoJS.MD5(ts + PRIV_KEY + PUBLIC_KEY).toString();\n    fetch(`http://gateway.marvel.com/v1/public/characters?ts=${ts}&limit=52&apikey=${PUBLIC_KEY}&hash=${hash}`) \n    .then(response => response.json())\n    .then(data => this.setState({data: data.data.results}));\n  }\n  render() {\n    console.log(this.state.data)\n    const dataList = this.state.data.map((data,i)=>{\n     return (<Comic key={i} comicsTitle={data.name} comicsUrl={data.urls[0].url} comicsDesc={data.description} comicsImg={`http://i.annihil.us/u/prod/marvel/i/mg/c/e0${data.thumbnail.path}/portrait_xlarge.jpg`}/>)\n    })\n    return (\n    <Container>\n    <img className=\"marvel\"src=\"./Logo-Marvel.png\" />\n    <Row> \n      {dataList}\n      <Paginate/>\n    </Row>\n  </Container>\n\n    )\n  }\n}\n\nvar styleHeart = {\n  color: '#fc6861',\n  position: 'absolute',\n  top: '5%',\n  left: '80%',\n  cursor: 'pointer',\n}\n\n// function mapDispatchToProps(dispatch) {\n//   return {\n//    data: function() { \n//      dispatch( {type: 'data', \n//      data \n//     } ) \n//    }\n//   }\n//  }\n \n//  export default connect(\n//    null, \n//    mapDispatchToProps\n//  )(App);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}