{"ast":null,"code":"import _toConsumableArray from \"/Users/macbookpro/Desktop/apimarvel/front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/macbookpro/Desktop/apimarvel/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macbookpro/Desktop/apimarvel/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macbookpro/Desktop/apimarvel/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbookpro/Desktop/apimarvel/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macbookpro/Desktop/apimarvel/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macbookpro/Desktop/apimarvel/front/src/App.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport CryptoJS from \"crypto-js\";\nimport Comic from './Components/comic';\nimport Page from './Components/paginate';\nimport { Container, Row, Button, Navbar, Collapse, Nav, NavItem, NavLink, NavbarToggler } from 'reactstrap'; // import {Provider} from 'react-redux';\n// import {createStore, combineReducers} from 'redux';\n// import Data from './Components/Reduceur/nbPage.reduceur'\n// import {connect} from 'react-redux';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nvar PRIV_KEY = \"ce1693d8baa06f879abcab4c75c19e34006074db\";\nvar PUBLIC_KEY = \"1415ee478404a80e6f620f034e526ca0\";\nvar ts = new Date().getTime();\nvar hash = CryptoJS.MD5(ts + PRIV_KEY + PUBLIC_KEY).toString(); // const store = createStore(combineReducers({Data}));\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: [],\n      comicCount: 0,\n      comicNameList: [],\n      limit: 8,\n      viewOnlyLike: false,\n      offset: 0\n    };\n\n    _this.handleClickLikeOn = function () {\n      console.log(\"I only want to see the liked films\");\n\n      _this.setState({\n        viewOnlyLike: true\n      });\n    };\n\n    _this.handleClickLike = function (isLike, name) {\n      // 1) First of all, we want to realize a copy of our state because it is an Array and we do not want to create a simple reference (for arrays and objects) but a real copy.\n      var comicNameListCopy = _toConsumableArray(_this.state.comicNameList); // 2) If the movie is liked :\n\n\n      if (isLike) {\n        // 2.1) We want to push this specific movie and increment this.state. comicCout\n        comicNameListCopy.push(name);\n\n        _this.setState({\n          comicCount: _this.state.comicCount + 1,\n          comicNameList: comicNameListCopy\n        });\n      } // 3) If the movie is disliked :\n      else {\n          // 3.1) We want to target this specific movie, and then splice it\n          var index = comicNameListCopy.indexOf(name);\n          comicNameListCopy.splice(index, 1);\n\n          _this.setState({\n            comicCount: _this.state.comicCount - 1,\n            comicNameList: comicNameListCopy\n          });\n        }\n    };\n\n    _this.handleClickLikeOff = function () {\n      console.log(\"I want to see all the films available\");\n\n      _this.setState({\n        viewOnlyLike: false\n      });\n    };\n\n    _this.hundleClick = function () {\n      _this.setState({\n        limit: 8,\n        offset: 0\n      });\n\n      fetch(\"http://gateway.marvel.com/v1/public/characters?ts=\".concat(ts, \"&offset=\").concat(_this.state.offset, \"&limit=\").concat(_this.state.limit, \"&apikey=\").concat(PUBLIC_KEY, \"&hash=\").concat(hash)).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this.setState({\n          data: data.data.results\n        });\n      });\n    };\n\n    _this.hundleClick2 = function () {\n      _this.setState({\n        limit: 8,\n        offset: 8\n      });\n\n      fetch(\"http://gateway.marvel.com/v1/public/characters?ts=\".concat(ts, \"&offset=\").concat(_this.state.offset, \"&limit=\").concat(_this.state.limit, \"&apikey=\").concat(PUBLIC_KEY, \"&hash=\").concat(hash)).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this.setState({\n          data: data.data.results\n        });\n      });\n    };\n\n    _this.hundleClick3 = function () {\n      _this.setState({\n        limit: 8,\n        offset: 16\n      });\n\n      fetch(\"http://gateway.marvel.com/v1/public/characters?ts=\".concat(ts, \"&offset=\").concat(_this.state.offset, \"&limit=\").concat(_this.state.limit, \"&apikey=\").concat(PUBLIC_KEY, \"&hash=\").concat(hash)).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this.setState({\n          data: data.data.results\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"http://gateway.marvel.com/v1/public/characters?ts=\".concat(ts, \"&offset=\").concat(this.state.offset, \"&limit=\").concat(this.state.limit, \"&apikey=\").concat(PUBLIC_KEY, \"&hash=\").concat(hash)).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.setState({\n          data: data.data.results\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      // this.props.onNbPageClick(this.state.data , this.state.limit, this.state.offset)\n      console.log(this.state.data);\n      var dataList = this.state.data.map(function (data, i) {\n        return React.createElement(Comic, {\n          key: i,\n          comicsTitle: data.name,\n          comicsUrl: data.urls[1].url,\n          comicsDesc: data.description,\n          displayOnlyLike: _this3.state.viewOnlyLike,\n          handleClickParent: _this3.handleClickLike,\n          comicsImg: \"\".concat(data.thumbnail.path, \"/portrait_xlarge.jpg\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        });\n      });\n      return (// <Provider store={store}>\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            marginBottom: 90\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(Navbar, {\n          color: \"dark\",\n          dark: true,\n          expand: \"md\",\n          fixed: \"top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"navbar-brand\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"./logo.png\",\n          width: \"30\",\n          height: \"30\",\n          className: \"d-inline-block align-top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        })), React.createElement(NavbarToggler, {\n          onClick: this.toggleNavBar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }), React.createElement(Collapse, {\n          isOpen: this.state.isOpenNavBar,\n          navbar: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(Nav, {\n          className: \"\",\n          navbar: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(NavItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          onClick: this.handleClickLikeOff,\n          style: {\n            color: \"#FFFFFF\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, \"Comic\")), React.createElement(NavItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          onClick: this.handleClickLikeOn,\n          style: {\n            color: \"#FFFFFF\",\n            marginRight: 50\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, \"Favoris\")))))), React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"marvel\",\n          src: \"./marvel_1.jpg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, dataList), React.createElement(Button, {\n          onClick: this.hundleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, \"1\"), React.createElement(Button, {\n          onClick: this.hundleClick2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, \"2\"), React.createElement(Button, {\n          onClick: this.hundleClick3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, \"3\"))) // {/* </Provider> */}\n\n      );\n    }\n  }]);\n\n  return App;\n}(Component); // function mapDispatchToProps(dispatch) {\n//   return {\n//    onNbPageClick: function(data , limit , offset) { \n//      dispatch( {type: 'data',\n//                 data : data ,\n//                 limit : limit,\n//                 offset: offset\n//     } ) \n//    }\n//   }\n//  }\n//  export default connect(\n//    null, \n//    mapDispatchToProps\n//  )(App);\n\n\nexport default App;","map":{"version":3,"sources":["/Users/macbookpro/Desktop/apimarvel/front/src/App.js"],"names":["React","Component","CryptoJS","Comic","Page","Container","Row","Button","Navbar","Collapse","Nav","NavItem","NavLink","NavbarToggler","PRIV_KEY","PUBLIC_KEY","ts","Date","getTime","hash","MD5","toString","App","state","data","comicCount","comicNameList","limit","viewOnlyLike","offset","handleClickLikeOn","console","log","setState","handleClickLike","isLike","name","comicNameListCopy","push","index","indexOf","splice","handleClickLikeOff","hundleClick","fetch","then","response","json","results","hundleClick2","hundleClick3","dataList","map","i","urls","url","description","thumbnail","path","marginBottom","toggleNavBar","isOpenNavBar","color","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport CryptoJS from \"crypto-js\";\nimport Comic from './Components/comic';\nimport Page from './Components/paginate';\nimport {Container,Row,Button, Navbar,\n  Collapse,\n  Nav,\n  NavItem,\n  NavLink,NavbarToggler }from 'reactstrap'\n// import {Provider} from 'react-redux';\n// import {createStore, combineReducers} from 'redux';\n// import Data from './Components/Reduceur/nbPage.reduceur'\n// import {connect} from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst PRIV_KEY = \"ce1693d8baa06f879abcab4c75c19e34006074db\";\nconst PUBLIC_KEY = \"1415ee478404a80e6f620f034e526ca0\";\nconst ts = new Date().getTime();\nconst hash = CryptoJS.MD5(ts + PRIV_KEY + PUBLIC_KEY).toString();\n\n\n// const store = createStore(combineReducers({Data}));\n\nclass App extends Component {\n  state = {\n    data: [],\n    comicCount: 0,\n    comicNameList: [],\n    limit : 8,\n    viewOnlyLike: false,\n    offset : 0\n  }\n\n  componentDidMount() {\n    fetch(`http://gateway.marvel.com/v1/public/characters?ts=${ts}&offset=${this.state.offset}&limit=${this.state.limit}&apikey=${PUBLIC_KEY}&hash=${hash}`)\n    .then(response => response.json())\n    .then(data => this.setState({data: data.data.results}));\n  }\n  handleClickLikeOn=()=> {\n    console.log(\"I only want to see the liked films\")\n    this.setState({\n      viewOnlyLike: true\n    })\n  }\n\n\n  handleClickLike=(isLike, name)=> {\n    // 1) First of all, we want to realize a copy of our state because it is an Array and we do not want to create a simple reference (for arrays and objects) but a real copy.\n    var  comicNameListCopy = [...this.state. comicNameList];\n\n    // 2) If the movie is liked :\n    if (isLike) {\n      // 2.1) We want to push this specific movie and increment this.state. comicCout\n      comicNameListCopy.push(name);\n      this.setState({\n        comicCount: this.state. comicCount+1,\n        comicNameList:  comicNameListCopy,\n      })\n    }\n    // 3) If the movie is disliked :\n    else {\n      // 3.1) We want to target this specific movie, and then splice it\n      var index =  comicNameListCopy.indexOf(name)\n      comicNameListCopy.splice(index, 1);\n      this.setState({\n        comicCount: this.state. comicCount-1,\n        comicNameList:  comicNameListCopy,\n      })\n    }\n  }\n\n  handleClickLikeOff=()=> {\n    console.log(\"I want to see all the films available\")\n    this.setState({\n      viewOnlyLike: false\n    })\n  }\n\n\n  hundleClick=()=>{\n    this.setState({\n    limit : 8 , offset : 0\n    })\n    fetch(`http://gateway.marvel.com/v1/public/characters?ts=${ts}&offset=${this.state.offset}&limit=${this.state.limit}&apikey=${PUBLIC_KEY}&hash=${hash}`)\n    .then(response => response.json())\n    .then(data => this.setState({data: data.data.results}));\n    }\n\n    hundleClick2=()=>{\n      this.setState({\n      limit : 8 , offset : 8\n      })\n      fetch(`http://gateway.marvel.com/v1/public/characters?ts=${ts}&offset=${this.state.offset}&limit=${this.state.limit}&apikey=${PUBLIC_KEY}&hash=${hash}`)\n      .then(response => response.json())\n      .then(data => this.setState({data: data.data.results}));\n      }\n\n      hundleClick3=()=>{\n        this.setState({\n        limit : 8 , offset : 16\n        })\n        fetch(`http://gateway.marvel.com/v1/public/characters?ts=${ts}&offset=${this.state.offset}&limit=${this.state.limit}&apikey=${PUBLIC_KEY}&hash=${hash}`)\n        .then(response => response.json())\n        .then(data => this.setState({data: data.data.results}));\n        }\n  \n   \n\n  render() {\n    // this.props.onNbPageClick(this.state.data , this.state.limit, this.state.offset)\n    console.log(this.state.data)\n  \n   \n    const dataList = this.state.data.map((data,i)=>{\n     return (<Comic key={i} \n      comicsTitle={data.name} \n      comicsUrl={data.urls[1].url} \n      comicsDesc={data.description}\n      displayOnlyLike={this.state.viewOnlyLike}\n      handleClickParent={this.handleClickLike} \n      comicsImg={`${data.thumbnail.path}/portrait_xlarge.jpg`}/>)\n    })\n\n    return (\n      // <Provider store={store}>\n    <div>\n\n     <div style={{marginBottom: 90}}>\n      <Navbar color=\"dark\" dark expand=\"md\" fixed=\"top\">\n        <span className=\"navbar-brand\">\n          <img src=\"./logo.png\" width=\"30\" height=\"30\" className=\"d-inline-block align-top\"/>\n        </span>\n        <NavbarToggler onClick={this.toggleNavBar} />\n        <Collapse isOpen={this.state.isOpenNavBar} navbar>\n          <Nav className=\"\" navbar>\n            <NavItem>\n              <NavLink onClick={this.handleClickLikeOff}style={{color: \"#FFFFFF\"}}>Comic</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink onClick={this.handleClickLikeOn}style={{color: \"#FFFFFF\", marginRight: 50}}>Favoris</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n      </div>\n      \n      <Container>\n      <img className=\"marvel\"src=\"./marvel_1.jpg\" />\n      <Row > \n        {dataList}\n      </Row>\n      <Button onClick={this.hundleClick}>1</Button>\n      <Button onClick={this.hundleClick2}>2</Button>\n      <Button onClick={this.hundleClick3}>3</Button>\n      </Container>\n    </div>\n      \n    // {/* </Provider> */}\n\n    )\n  }\n}\n\n// function mapDispatchToProps(dispatch) {\n//   return {\n//    onNbPageClick: function(data , limit , offset) { \n//      dispatch( {type: 'data',\n//                 data : data ,\n//                 limit : limit,\n//                 offset: offset\n//     } ) \n//    }\n//   }\n//  }\n \n//  export default connect(\n//    null, \n//    mapDispatchToProps\n//  )(App);\n export default App\n\n\n\n"]},"metadata":{},"sourceType":"module"}