{"ast":null,"code":"import _classCallCheck from \"/Users/macbookpro/Desktop/apimarvel/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macbookpro/Desktop/apimarvel/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macbookpro/Desktop/apimarvel/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbookpro/Desktop/apimarvel/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macbookpro/Desktop/apimarvel/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macbookpro/Desktop/apimarvel/front/src/App.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport CryptoJS from \"crypto-js\";\nimport Comic from './Components/comic';\nimport { Container, Row, Button, Navbar } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //Redux//////////////////////////////////////////\n\nimport { connect } from 'react-redux';\nimport Data from './Components/Reduceur/nbPage.reduceur';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\nvar store = createStore(combineReducers({\n  Data: Data\n}));\nvar PRIV_KEY = \"ce1693d8baa06f879abcab4c75c19e34006074db\";\nvar PUBLIC_KEY = \"1415ee478404a80e6f620f034e526ca0\";\nvar ts = new Date().getTime();\nvar hash = CryptoJS.MD5(ts + PRIV_KEY + PUBLIC_KEY).toString();\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: [],\n      total: 0\n    };\n    _this.limit = 8;\n\n    _this.handleClick = function (e) {\n      _this.setState({\n        limit: 8,\n        offset: e.target.value\n      });\n\n      fetch(\"http://gateway.marvel.com/v1/public/characters?ts=\".concat(ts, \"&offset=\").concat(e.target.value, \"&limit=8&apikey=\").concat(PUBLIC_KEY, \"&hash=\").concat(hash)).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this.setState({\n          data: data.data.results\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"http://gateway.marvel.com/v1/public/characters?ts=\".concat(ts, \"&offset=\").concat(this.state.offset, \"&limit=8&apikey=\").concat(PUBLIC_KEY, \"&hash=\").concat(hash)).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.setState({\n          data: data.data.results,\n          total: data.data.total / 10\n        });\n      }); //Je divise par / 10 pour limiter le nombre de page en dynamique //\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // this.props.onNbPageClick(this.state.data , this.state.limit, this.state.offset)\n      console.log(this.state.total);\n      var dataList = this.state.data.map(function (data, i) {\n        return React.createElement(Comic, {\n          key: i,\n          comicsTitle: data.name,\n          comicsUrl: data.urls[1].url,\n          comicsDesc: data.description,\n          comicsImg: \"\".concat(data.thumbnail.path, \"/portrait_xlarge.jpg\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        });\n      }); // var buttonList = [];\n      // var maxPage = this.state.total / this.limit;\n      // for(var i=0; i<maxPage; i++) {\n      //   buttonList.push(<Button style={style.btnPage} value={i} onClick={this.handleClick}>{i+1}</Button>);\n      // }\n\n      return React.createElement(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"marvel\",\n        src: \"./marvel_1.jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, dataList)));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onNbPageClick: function onNbPageClick(data, limit, offset) {\n      dispatch({\n        type: 'data',\n        data: data,\n        limit: limit,\n        offset: offset\n      });\n    }\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(App);\nvar style = {\n  btnPage: {\n    backgroundColor: 'rgb(247, 143, 63)',\n    color: 'white',\n    marginLeft: '3px',\n    paddingRight: '25px',\n    width: '30px'\n  }\n};","map":{"version":3,"sources":["/Users/macbookpro/Desktop/apimarvel/front/src/App.js"],"names":["React","Component","CryptoJS","Comic","Container","Row","Button","Navbar","connect","Data","Provider","createStore","combineReducers","store","PRIV_KEY","PUBLIC_KEY","ts","Date","getTime","hash","MD5","toString","App","state","data","total","limit","handleClick","e","setState","offset","target","value","fetch","then","response","json","results","console","log","dataList","map","i","name","urls","url","description","thumbnail","path","mapDispatchToProps","dispatch","onNbPageClick","type","style","btnPage","backgroundColor","color","marginLeft","paddingRight","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport CryptoJS from \"crypto-js\";\nimport Comic from './Components/comic';\n\nimport {Container,Row,Button, Navbar,\n }from 'reactstrap'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//Redux//////////////////////////////////////////\nimport {connect} from 'react-redux';\nimport Data from './Components/Reduceur/nbPage.reduceur'\nimport {Provider} from 'react-redux';\nimport {createStore, combineReducers} from 'redux';\nconst store = createStore(combineReducers({Data}));\n\n\n\nconst PRIV_KEY = \"ce1693d8baa06f879abcab4c75c19e34006074db\";\nconst PUBLIC_KEY = \"1415ee478404a80e6f620f034e526ca0\";\nconst ts = new Date().getTime();\nconst hash = CryptoJS.MD5(ts + PRIV_KEY + PUBLIC_KEY).toString();\n\n\nclass App extends Component {\n  state = {\n    data: [],\n    total : 0\n  }\n  limit = 8;\n\n  componentDidMount() {\n    fetch(`http://gateway.marvel.com/v1/public/characters?ts=${ts}&offset=${this.state.offset}&limit=8&apikey=${PUBLIC_KEY}&hash=${hash}`)\n    .then(response => response.json())\n    .then(data => this.setState({data: data.data.results , total : data.data.total / 10}));\n    //Je divise par / 10 pour limiter le nombre de page en dynamique //\n  }\n  \n  handleClick=(e)=>{\n    this.setState({\n    limit : 8 , offset : e.target.value\n    })\n    fetch(`http://gateway.marvel.com/v1/public/characters?ts=${ts}&offset=${e.target.value}&limit=8&apikey=${PUBLIC_KEY}&hash=${hash}`)\n    .then(response => response.json())\n    .then(data => this.setState({data: data.data.results}));\n    }\n\n  render() {\n    // this.props.onNbPageClick(this.state.data , this.state.limit, this.state.offset)\n    console.log(this.state.total)\n    const dataList = this.state.data.map((data,i)=>{\n     return (<Comic key={i} \n      comicsTitle={data.name} \n      comicsUrl={data.urls[1].url} \n      comicsDesc={data.description} \n      comicsImg={`${data.thumbnail.path}/portrait_xlarge.jpg`}/>)\n    })\n\n    // var buttonList = [];\n    // var maxPage = this.state.total / this.limit;\n    // for(var i=0; i<maxPage; i++) {\n    //   buttonList.push(<Button style={style.btnPage} value={i} onClick={this.handleClick}>{i+1}</Button>);\n    // }\n\n    return (\n      <Provider store={store}>\n        <Container>\n      <img className=\"marvel\"src=\"./marvel_1.jpg\" />\n      <Row> \n        {dataList}\n        {/* {buttonList} */}\n      </Row>\n      </Container>\n      </Provider>\n      \n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n   onNbPageClick: function(data , limit , offset) { \n     dispatch( {type: 'data',\n                data : data ,\n                limit : limit,\n                offset: offset\n    } ) \n   }\n  }\n }\n \n export default connect(\n   null, \n   mapDispatchToProps\n )(App);\n\nvar style= {\n  btnPage : {\n    backgroundColor: 'rgb(247, 143, 63)',\n    color: 'white',\n    marginLeft :'3px',\n    paddingRight :'25px',\n    width: '30px',\n    },\n  }\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}